# Docker Compose للتطبيق المحلي والإنتاج
version: '3.8'

services:
  # الواجهة الخلفية
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mubdi-ai-backend
    ports:
      - "8000:8000"
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - CORS_ORIGINS=http://localhost:3000,http://localhost:5173,https://mubdi-ai.netlify.app,https://mubdi-ai-frontend.vercel.app
      - PORT=8000
      - HOST=0.0.0.0
      - DEBUG=false
      - LOG_LEVEL=INFO
    env_file:
      - backend/.env
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mubdi-network

  # الواجهة الأمامية (للتطوير المحلي)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mubdi-ai-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
      - NODE_ENV=production
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - mubdi-network

  # Nginx للإنتاج (اختياري)
  nginx:
    image: nginx:alpine
    container_name: mubdi-ai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    profiles:
      - production
    networks:
      - mubdi-network

networks:
  mubdi-network:
    driver: bridge

volumes:
  logs:
    driver: local